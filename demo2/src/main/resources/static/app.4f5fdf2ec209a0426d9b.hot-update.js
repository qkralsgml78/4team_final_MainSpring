webpackHotUpdate("app",{

/***/ "./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/pages/Overview1.vue?vue&type=script&lang=js":
/*!************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/pages/Overview1.vue?vue&type=script&lang=js ***!
  \************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var src_components_Cards_ChartCard_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/components/Cards/ChartCard.vue */ \"./src/components/Cards/ChartCard.vue\");\n/* harmony import */ var src_components_Cards_StatsCard_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/components/Cards/StatsCard.vue */ \"./src/components/Cards/StatsCard.vue\");\n/* harmony import */ var src_components_Table_vue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/Table.vue */ \"./src/components/Table.vue\");\n/* harmony import */ var _components_Cards_Card_vue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/Cards/Card.vue */ \"./src/components/Cards/Card.vue\");\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  components: {\n    LTable: src_components_Table_vue__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    ChartCard: src_components_Cards_ChartCard_vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    StatsCard: src_components_Cards_StatsCard_vue__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    Card: _components_Cards_Card_vue__WEBPACK_IMPORTED_MODULE_3__[\"default\"]\n  },\n  data: function data() {\n    return {\n      weeklyCompletedOrders: 0,\n      editTooltip: 'Edit Task',\n      deleteTooltip: 'Remove',\n      pieChart: {\n        data: {\n          labels: ['40%', '20%', '40%'],\n          series: [40, 20, 40]\n        }\n      },\n      lineChart: {\n        data: {\n          labels: ['9:00AM', '12:00AM', '3:00PM', '6:00PM', '9:00PM', '12:00PM', '3:00AM', '6:00AM'],\n          series: [[287, 385, 490, 492, 554, 586, 698, 695], [67, 152, 143, 240, 287, 335, 435, 437], [23, 113, 67, 108, 190, 239, 307, 308]]\n        },\n        options: {\n          low: 0,\n          high: 800,\n          showArea: false,\n          height: '245px',\n          axisX: {\n            showGrid: false\n          },\n          lineSmooth: true,\n          showLine: true,\n          showPoint: true,\n          fullWidth: true,\n          chartPadding: {\n            right: 50\n          }\n        },\n        responsiveOptions: [['screen and (max-width: 640px)', {\n          axisX: {\n            labelInterpolationFnc: function labelInterpolationFnc(value) {\n              return value[0];\n            }\n          }\n        }]]\n      },\n      barChart: {\n        data: {\n          labels: ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n          series: [[542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895], [412, 243, 280, 580, 453, 353, 300, 364, 368, 410, 636, 695]]\n        },\n        options: {\n          seriesBarDistance: 10,\n          axisX: {\n            showGrid: false\n          },\n          height: '245px'\n        },\n        responsiveOptions: [['screen and (max-width: 640px)', {\n          seriesBarDistance: 5,\n          axisX: {\n            labelInterpolationFnc: function labelInterpolationFnc(value) {\n              return value[0];\n            }\n          }\n        }]]\n      },\n      tableData: {\n        data: [{\n          title: 'Sign contract for \"What are conference organizers afraid of?\"',\n          checked: false\n        }, {\n          title: 'Lines From Great Russian Literature? Or E-mails From My Boss?',\n          checked: true\n        }, {\n          title: 'Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit',\n          checked: true\n        }, {\n          title: 'Create 4 Invisible User Experiences you Never Knew About',\n          checked: false\n        }, {\n          title: 'Read \"Following makes Medium better\"',\n          checked: false\n        }, {\n          title: 'Unfollow 5 enemies from twitter',\n          checked: false\n        }]\n      }\n    };\n  },\n  methods: {\n    // other methods...\n    fetchOrderList: function fetchOrderList() {\n      var _this = this;\n      var businessId = this.$route.params.businessId;\n      axios.get(\"http://localhost:8080/api/orders/id/\".concat(businessId)).then(function (response) {\n        var data = response.data;\n        var startOfWeek = new Date();\n        startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay() + (startOfWeek.getDay() === 0 ? -6 : 1)); // Adjust to the first day of the week (Monday)\n        startOfWeek.setHours(0, 0, 0, 0);\n        _this.weeklyCompletedOrders = data.filter(function (order) {\n          var orderDate = new Date(order.orderDate);\n          return orderDate >= startOfWeek && order.orderStatus === '주문 완료';\n        }).length;\n\n        // You might want to update other parts of your data with the fetched data\n      }).catch(function (error) {\n        console.error(\"Failed to fetch orders:\", error);\n      });\n    } // continue with other methods...\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/pages/Overview1.vue?vue&type=script&lang=js\n");

/***/ })

})